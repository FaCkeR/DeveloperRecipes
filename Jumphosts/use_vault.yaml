---
- name: Create temporary file to collect applicable inventory_hosts
  hosts: localhost
  gather_facts: no
  tasks:
    - name: create temporary file
      tempfile:
        state: file
        suffix: temp
      register: tempfile
    - set_fact:
        tempfile: "{{ tempfile.path }}"

- name: Collect applicable inventory_hosts with delegate_to
  hosts: all
  gather_facts: false
  serial: 1
  tasks:
    - lineinfile: dest="{{ hostvars['127.0.0.1']['tempfile'] }}" line="{{ inventory_hostname }}" state=present create=yes
      delegate_to: localhost

- name: Delete temporary file after setting inventory_hosts
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Get the inventory_hosts
      shell: |
        cat {{ tempfile }}
      register: inventory_hosts_output
    - name: Register the inventory_hosts
      set_fact:
        inventory_hosts: "{{ inventory_hosts_output.stdout_lines }}"
    - name: use the registered var and the file module to remove the temporary file
      file:
        path: "{{ tempfile }}"
        state: absent
      when: tempfile is defined

- name: Role ensures that the socks tunnel is setup for connection to vault
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - ansible-role-socks5-tunnel

- hosts: localhost
  gather_facts: no
  connection: local
  vars:
    token: myroot
    vault_secret_path: /testkv/data/testsecrets/
    #vault_url: http://ec2-52-201-237-93.compute-1.amazonaws.com:1234
    #proxies: '{}'
    #vault_url: http://172.17.0.3:1234
    #proxies: '{"http":"socks5h://localhost:1234","https":"socks5h://localhost:1234"}'
    #proxies: '{"http":"socks5h://unixsocket/tmp/mysock.sock","https":"socks5h://unixsocket/tmp/mysock.sock"}'
    vault_url: http://aakrhel001.yellowykt.com:1234
    proxies: {"http":"{{ jh1_socks_port if jh1_socks_port is defined else jh_socks_port }}","https:":"{{ jh1_socks_port if jh1_socks_port is defined else jh_socks_port }}"}
  tasks:
    - name: Start ssh-agent and Retrieve the SSH_AUTH_SOCK and SSH_AGENT_PID environment variables
      shell: |
        eval $(ssh-agent -s) > /dev/null
        echo '{"SSH_AUTH_SOCK":"'$SSH_AUTH_SOCK'","SSH_AGENT_PID":"'$SSH_AGENT_PID'"}'
      register: env_vars_stdout
    - set_fact:
        env_vars: "{{ env_vars_stdout.stdout }}"
    - name: Print the environment variables
      debug:
        msg: "{{ env_vars }}"
    #- name: Check the ssh-agent
    #  shell: |
    #    ps -ef | grep ssh-agent
    #    true
    #- debug:
    #    msg:
    #      - "vault_url: {{ vault_url }}"
    #      - "proxies: {{ proxies | to_json | replace(' ','') | string }}"
    #      - "vault_secret_path: {{ vault_secret_path }}"
    - set_fact:
        proxies_str: "{{ proxies | to_json | replace(' ','') | string }}"
    - include_tasks: use_vault_include.yaml # myhostname={{ item }} vault_secret_path={{ vault_secret_path }} token={{ token }} vault_url={{ vault_url }}
      with_items: "{{ inventory_hosts }}"
      loop_control:
        loop_var: myhostname
    - set_fact:
        endpoint_ssh_private_key: "/tmp/my_ssh_private_key_file"
        endpoint_ssh_private_key_passphrase: "{{ my_ssh_passphrase }}"
        endpoint_ssh_user: "{{ my_ssh_user }}"
        endpoint_ssh_port: "{{ ansible_port if ansible_port is defined else 22 }}"
    - name: Show the SSH_AUTH_SOCK and SSH_AGENT_PID environment variables
      shell: |
        ps -ef | grep ssh-agent
        echo '{"SSH_AUTH_SOCK":"'$SSH_AUTH_SOCK'","SSH_AGENT_PID":"'$SSH_AGENT_PID'"}'

- hosts: all
  gather_facts: no
  tasks:
    - shell: echo Hello `hostname`
      register: result
    - debug:
        msg: "{{ result }}"
