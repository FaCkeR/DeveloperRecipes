---
- name: Create temporary file to collect applicable inventory_hosts
  hosts: localhost
  gather_facts: no
  tasks:
    - name: create temporary file
      tempfile:
        state: file
        suffix: temp
      register: tempfile
    - set_fact:
        tempfile: "{{ tempfile.path }}"

- name: Collect applicable inventory_hosts with delegate_to
  hosts: all
  gather_facts: false
  serial: 1
  tasks:
    - lineinfile: dest="{{ hostvars['127.0.0.1']['tempfile'] }}" line="{{ inventory_hostname }}" state=present create=yes
      delegate_to: localhost

- name: Delete temporary file after setting inventory_hosts
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Get the inventory_hosts
      shell: |
        cat {{ tempfile }}
      register: inventory_hosts_output
    - name: Register the inventory_hosts
      set_fact:
        inventory_hosts: "{{ inventory_hosts_output.stdout_lines }}"
    - name: use the registered var and the file module to remove the temporary file
      file:
        path: "{{ tempfile }}"
        state: absent
      when: tempfile is defined

- name: Role ensures that the socks tunnel is setup for connection to vault. This does not use ssh-agent.
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - ansible-role-socks5-tunnel
  tasks:
    - name: Check if SSH_AGENT is runnning
      shell: |
        ps -ef | grep " $SSH_AGENT_PID " | grep -v grep
        true
    - name: Start ssh-agent if not started and retrieve the SSH_AUTH_SOCK and SSH_AGENT_PID environment variables
      shell: |
        if ps -p $SSH_AGENT_PID > /dev/null
        then
            echo -n "" > /dev/null
        else
            eval $(ssh-agent -s) > /dev/null
        fi
        echo '{"SSH_AUTH_SOCK":"'$SSH_AUTH_SOCK'","SSH_AGENT_PID":"'$SSH_AGENT_PID'"}'
      register: env_vars_stdout
    - set_fact:
        env_vars: "{{ env_vars_stdout.stdout }}"
    - name: Print the environment variables
      debug:
        msg: "{{ env_vars }}"

- name: Role ensures that the ssh keys of jumphosts are added to ssh-agent
  hosts: localhost
  connection: local
  gather_facts: false
  environment: "{{ env_vars }}"
  roles:
    - ansible-role-ssh-add-jumphosts-all

- name: Retrieve credentials from vault for selected target hosts and add to ssh-agent
  hosts: localhost
  gather_facts: no
  connection: local
  environment: "{{ env_vars }}"
  vars:
    token: myroot
    vault_secret_path: /testkv/data/testsecrets/

    # Direct connection, no proxies
    #vault_url: http://ec2-52-201-237-93.compute-1.amazonaws.com:1234
    #proxies: '{}'

    # Local vault on final jumphost hop
    #vault_url: http://172.17.0.3:1234
    #proxies: '{"http":"socks5h://localhost:1234","https":"socks5h://localhost:1234"}'
    #proxies: '{"http":"socks5h://unixsocket/tmp/mysock.sock","https":"socks5h://unixsocket/tmp/mysock.sock"}'
 
    # Proxy accessible from final jumphost hop
    vault_url: http://aakrhel001.yellowykt.com:1234
    proxies: {"http":"{{ jh1_socks_port if jh1_socks_port is defined else jh_socks_port }}","https:":"{{ jh1_socks_port if jh1_socks_port is defined else jh_socks_port }}"}
  tasks:
    - set_fact:
        proxies_str: "{{ proxies | to_json | replace(' ','') | string }}"
    - include_tasks: use_vault_include.yaml # Uses: proxies_str myhostname vault_secret_path token vault_url
      with_items: "{{ inventory_hosts }}"
      loop_control:
        loop_var: myhostname
    - debug:
        msg: "Target host list = {{groups.target_hosts}}"

# We can kill the tunnel to retrieve the credentials from Vault now because the ssh keys have been added to the ssh-agent

#- name: Run on target hosts using inventory/group/hosts variables, does not use the target_hosts group
#  hosts: all
#  gather_facts: no
#  # environment: "{{ hostvars['127.0.0.1']['env_vars'] }}" # This will not work, environment is not set on localhost. We must use the -oIdentityAgent.
#  tasks:
#    - set_fact:
#        ansible_ssh_common_args: "{{ '-oIdentityAgent='+hostvars['127.0.0.1']['env_vars']['SSH_AUTH_SOCK'] + ' ' + (ansible_ssh_common_args|regex_replace('ssh ','ssh '+ '-oIdentityAgent='+hostvars['127.0.0.1']['env_vars']['SSH_AUTH_SOCK']+' ')) }}"
#    - debug:
#        msg: "ansible_ssh_common_args='{{ ansible_ssh_common_args }}' ansible_port={{ ansible_port }} ansible_user={{ ansible_user }}"
#    - shell: echo Hello `hostname`
#      register: result
#      #vars:
#        #ansible_ssh_common_args: "{{ '-oIdentityAgent='+hostvars['127.0.0.1']['env_vars']['SSH_AUTH_SOCK'] }}"

- name: Run on target hosts using host variables generated from vault when creating the target_hosts group
  hosts: target_hosts
  gather_facts: no
  tasks:
    - set_fact:
        ansible_ssh_common_args: "{{ '-oIdentityAgent='+hostvars['127.0.0.1']['env_vars']['SSH_AUTH_SOCK'] + ' ' + (ansible_ssh_common_args|regex_replace('ssh ','ssh '+ '-oIdentityAgent='+hostvars['127.0.0.1']['env_vars']['SSH_AUTH_SOCK']+' ')) }}"
    - debug:
        msg:
          - "ansible_ssh_common_args='{{ ansible_ssh_common_args }}'"
          - "ansible_ssh_common_args_vault='{{ ansible_ssh_common_args2 }}'"
          - "ansible_ssh_common_args_role='{{ '-oIdentityAgent='+hostvars['127.0.0.1']['env_vars']['SSH_AUTH_SOCK'] + hostvars['127.0.0.1']['ansible_ssh_common_args'] }}'"
          - "ansible_port={{ ansible_port }}"
          - "ansible_user={{ ansible_user }}"
    - shell: echo Hello `hostname`
      register: result
