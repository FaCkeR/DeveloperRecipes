---
#- name: Role ensures that the socks tunnel is setup
#  hosts: localhost
#  connection: local
#  gather_facts: false
#  roles:
#    - ansible-role-socks5-tunnel-nopassphrase
# 
- name: Role ensures that the socks tunnel is setup
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - shell: |
        echo SSH_AUTH_SOCK=$SSH_AUTH_SOCK
        echo SSH_AGENT_PID=$SSH_AGENT_PID
        true
    - shell: |
        /usr/bin/rsync -avz --rsh='ssh -q -oPort={{ endpoint_ssh_port }} -i {{ lookup('env','EP_SSH_PRIVATE_KEY') }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -q -i {{ lookup('env','JH2_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=""ssh -q -i {{ lookup('env','JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null {{ jh1_ssh_user }}@{{ jh1_ip }}"" {{ jh2_ssh_user }}@{{ jh2_ip }}"' roles/ ec2-user@aakrhel005.yellowykt.com:/tmp/roles/
    #- shell: |
    #    realpath ../../artifacts/{{ tower_job_id }}/ssh_key_data
    #  register: keyout
    #- set_fact:
    #    ssh_private_key_file: '{{ keyout.stdout }}'
    #- shell: |
    #    cat {{ ssh_private_key_file }}

- hosts: all
  gather_facts: no
  tasks:
    - name: Synchronization using rsync protocol (push)
      synchronize:
        src: roles/
        dest: /tmp/roles/
        #use_ssh_args: yes
        dest_port: "{{ ansible_port }}"
        delete: yes
        private_key: "{{ lookup('env','EP_SSH_PRIVATE_KEY') }}"
        rsync_opts:
          - --rsh='ssh -q -oPort={{ ansible_port }} -i {{ lookup('env','EP_SSH_PRIVATE_KEY') }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand="ssh -q -i {{ lookup('env','JH2_SSH_PRIVATE_KEY') }} -W %h:%p -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null -oProxyCommand=""ssh -q -i {{ lookup('env','JH1_SSH_PRIVATE_KEY') }} -W {{ jh2_ip }}:{{ jh2_ssh_port }} -oStrictHostKeyChecking=no -oUserKnownHostsFile=/dev/null {{ jh1_ssh_user }}@{{ jh1_ip }}"" {{ jh2_ssh_user }}@{{ jh2_ip }}"'

    - shell: echo Hello `hostname`; ls /tmp/roles
      register: result
