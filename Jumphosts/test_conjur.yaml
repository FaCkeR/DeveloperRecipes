---
- name: Role ensures that the socks tunnel is setup for connection to vault. This does not use ssh-agent.
  hosts: localhost
  connection: local
  gather_facts: false
  roles:
    - ansible-role-socks5-tunnel

- hosts: localhost
  gather_facts: no
  connection: local
  vars:
    api_key: ""
    app_id: BotApp
    auth_secret_path: "/authn/myConjurAccount/admin/authenticate"
    vault_secret_path: "/secrets/myConjurAccount/variable/{{ app_id }}%2F"
    vault_url: "https://aakrhel001.yellowykt.com:8443"
    proxy: "{{ jh1_socks_port if jh1_socks_port is defined else jh_socks_port }}"
    target_hosts: ["aakrhel001","aakrhel002","testaws-001","testaws-002","testaws-003"]
  tasks:
    - debug:
        msg:
          - "vault_url: {{ vault_url }}"
          - "vault_secret_path: {{ vault_secret_path }}"

    - name: Retrieve the token and use it to retrieve the credentials for all target_hosts
      #shell: curl -s -d "{{ api_key }}" --proxy {{ proxy }} -k {{ vault_url }}{{ auth_secret_path }} 2>/dev/null | base64 | tr -d '\r\n'
      shell: curl -s -d "{{ api_key }}" --proxy {{ proxy }} -k {{ vault_url }}{{ auth_secret_path }} | base64 | tr -d '\r\n'
      register: token_output
    - fail:
        msg: Count not retrieve token from {{ auth_secret_path }}
      when: token_output.stdout|length == 0
    - set_fact: token="{{ token_output.stdout }}"
    - name: Retrieve the credentials
      shell: |
        my_ssh_user=`curl --proxy {{ proxy }} -s -k -H "Content-Type: text/plain" -H "Authorization: Token token=\"{{ token }}\"" {{ vault_url }}{{ vault_secret_path }}testsecrets-{{ target_host }}-ssh_user 2>/dev/null`
        my_ssh_passphrase=`curl --proxy {{ proxy }} -s -k -H "Content-Type: text/plain" -H "Authorization: Token token=\"{{ token }}\"" {{ vault_url }}{{ vault_secret_path }}testsecrets-{{ target_host }}-ssh_passphrase 2>/dev/null | base64 -d`
        my_ssh_private_key=`curl --proxy {{ proxy }} -s -k -H "Content-Type: text/plain" -H "Authorization: Token token=\"{{ token }}\"" {{ vault_url }}{{ vault_secret_path }}testsecrets-{{ target_host }}-ssh_private_key 2>/dev/null | base64 -d`
        echo '{ "{{ target_host }}": {"ssh_user":"'$my_ssh_user'","ssh_passphrase":"'$my_ssh_passphrase'","ssh_private_key":"'$my_ssh_private_key'"}}'
      with_items: "{{ target_hosts }}"
      loop_control:
        loop_var: target_host
      register: response

    # Combine the retrieval of token and credentails into single command
    #- shell: |
    #    my_ssh_user=`curl --proxy {{ proxy }} -s -k -H "Content-Type: text/plain" -H "Authorization: Token token=\"\`curl -d "{{ api_key }}" --proxy socks5h://localhost:1234 -k {{ vault_url }}{{ auth_secret_path }} 2>/dev/null | base64 | tr -d '\r\n'\`\"" {{ vault_url }}{{ vault_secret_path }}testsecrets-{{ target_host }}-ssh_user 2>/dev/null`
    #    my_ssh_passphrase=`curl --proxy {{ proxy }} -s -k -H "Content-Type: text/plain" -H "Authorization: Token token=\"\`curl -d "{{ api_key }}" --proxy socks5h://localhost:1234 -k {{ vault_url }}{{ auth_secret_path }} 2>/dev/null | base64 | tr -d '\r\n'\`\"" {{ vault_url }}{{ vault_secret_path }}testsecrets-{{ target_host }}-ssh_passphrase 2>/dev/null | base64 -d`
    #    my_ssh_private_key=`curl --proxy {{ proxy }} -s -k -H "Content-Type: text/plain" -H "Authorization: Token token=\"\`curl -d "{{ api_key }}" --proxy socks5h://localhost:1234 -k {{ vault_url }}{{ auth_secret_path }} 2>/dev/null | base64 | tr -d '\r\n'\`\"" {{ vault_url }}{{ vault_secret_path }}testsecrets-{{ target_host }}-ssh_private_key 2>/dev/null | base64 -d`
    #    echo '{ "{{ target_host }}": {"ssh_user":"'$my_ssh_user'","ssh_passphrase":"'$my_ssh_passphrase'","ssh_private_key":"'$my_ssh_private_key'"}}'
    #  with_items: "{{ target_hosts }}"
    #  loop_control:
    #    loop_var: target_host
    #  register: response
    - debug:
        msg: "{{ response.results }}"
    - set_fact:
        creds: "{{ {} }}"
    - set_fact:
        creds: "{{ creds | combine(item|from_json) }}"
      with_items: "{{ response.results | json_query('[*].stdout[]') }}"
    - debug:
        msg: "{{ creds['aakrhel001'] }}"
    #- name: Show the credentials retrieved from vault
    #  debug:
    #    msg:
    #      - "my_ssh_user: {{ my_ssh_user }}"
    #      - "my_ssh_passphrase: {{ my_ssh_passphrase }}"
    #      - "my_ssh_private_key_data: {{ my_ssh_private_key_data }}"
    #- copy: content="{{ my_ssh_private_key_data }}" dest=/tmp/my_ssh_private_key_file
    #- name: Change file ownership, group and permissions
    #  file:
    #    path: /tmp/my_ssh_private_key_file
    #    mode: '0600'

